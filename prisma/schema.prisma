datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  organizations Organization[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Organization {
  id           String        @id @default(cuid())
  githubId     Int
  login        String
  avatarUrl    String?
  ownerId      String
  owner        User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  sponsorships Sponsorship[]
}

model Sponsorship {
  id          String                 @id @default(cuid())
  name        String
  amount      Int
  type        SponsorshipType
  frequency   SponsorshipFrequency?
  recipients  SponsorshipRecipient[]
  isActive    Boolean                @default(true)
  updateToken String                 @unique

  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
}

enum SponsorshipType {
  RECURRING
  ONE_TIME
}

enum SponsorshipFrequency {
  MONTHLY
  QUARTERLY
  YEARLY
}

model SponsorshipRecipient {
  id     String @id @default(cuid())
  login  String
  amount Int

  sponsorshipId String
  sponsorship   Sponsorship @relation(fields: [sponsorshipId], references: [id], onDelete: Cascade)
}
